<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crud.dao.MealMapper">
  <resultMap id="BaseResultMap" type="com.crud.bean.Meal">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Order_Id" jdbcType="VARCHAR" property="orderId" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="food" jdbcType="VARCHAR" property="food" />
    <result column="reservetime" jdbcType="TIMESTAMP" property="reservetime" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="ok" jdbcType="INTEGER" property="ok" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Order_Id, createtime, food, reservetime, room, ok
  </sql>
  <select id="selectByExample" parameterType="com.crud.bean.MealExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from meal
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meal
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crud.bean.MealExample">
    delete from meal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crud.bean.Meal">
    insert into meal (Id, Order_Id, createtime, 
      food, reservetime, room, 
      ok)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{food,jdbcType=VARCHAR}, #{reservetime,jdbcType=TIMESTAMP}, #{room,jdbcType=VARCHAR}, 
      #{ok,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.crud.bean.Meal">
    insert into meal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="orderId != null">
        Order_Id,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="food != null">
        food,
      </if>
      <if test="reservetime != null">
        reservetime,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="ok != null">
        ok,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="food != null">
        #{food,jdbcType=VARCHAR},
      </if>
      <if test="reservetime != null">
        #{reservetime,jdbcType=TIMESTAMP},
      </if>
      <if test="room != null">
        #{room,jdbcType=VARCHAR},
      </if>
      <if test="ok != null">
        #{ok,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crud.bean.MealExample" resultType="java.lang.Long">
    select count(*) from meal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meal
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        Order_Id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.food != null">
        food = #{record.food,jdbcType=VARCHAR},
      </if>
      <if test="record.reservetime != null">
        reservetime = #{record.reservetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=VARCHAR},
      </if>
      <if test="record.ok != null">
        ok = #{record.ok,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meal
    set Id = #{record.id,jdbcType=INTEGER},
      Order_Id = #{record.orderId,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      food = #{record.food,jdbcType=VARCHAR},
      reservetime = #{record.reservetime,jdbcType=TIMESTAMP},
      room = #{record.room,jdbcType=VARCHAR},
      ok = #{record.ok,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crud.bean.Meal">
    update meal
    <set>
      <if test="orderId != null">
        Order_Id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="food != null">
        food = #{food,jdbcType=VARCHAR},
      </if>
      <if test="reservetime != null">
        reservetime = #{reservetime,jdbcType=TIMESTAMP},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=VARCHAR},
      </if>
      <if test="ok != null">
        ok = #{ok,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crud.bean.Meal">
    update meal
    set Order_Id = #{orderId,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      food = #{food,jdbcType=VARCHAR},
      reservetime = #{reservetime,jdbcType=TIMESTAMP},
      room = #{room,jdbcType=VARCHAR},
      ok = #{ok,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>